@page "/pricing/{ServiceId:int}"

<MudText Typo="Typo.h3">Pricing</MudText>
<MudDivider  Class="my-6"/>
<MudGrid Justify="Justify.Center" Class="w-100 my-15">
    <MudItem>
        <MudPaper Class="p-4">
             <table>
        <tr>
            <MudGrid>
                <MudItem xs="12" sm="4" Class="d-none d-sm-block">
                    <th>Basic</th>
                </MudItem>
                <MudItem xs="12" sm="4" Class="d-none d-sm-block">
                    <th>Standard</th>
                </MudItem>
                <MudItem xs="12" sm="4" Class="d-none d-sm-block">
                    <th>Premium</th>
                </MudItem>
            </MudGrid>
        </tr>
        <tr>
            <MudGrid>
                <MudItem xs="12" sm="4">
                    <td>
                        <MudItem xs="12" sm="4" Class="d-block d-sm-none">
                            <th>Basic</th>
                        </MudItem>
                        <EditForm EditContext="this.EditContextBasicPackage">
                            <DataAnnotationsValidator />
                            <MudTextField Lines="2" T="string" Label="Title" @bind-Value="this.BasicPackageInputModel.Title" For="@(() => this.BasicPackageInputModel.Title)" Variant="Variant.Filled" />
                            <MudTextField Lines="3" T="string" Label="Details" @bind-Value="this.BasicPackageInputModel.Details" For="@(() => this.BasicPackageInputModel.Details)" Variant="Variant.Outlined"></MudTextField>
                            <MudSelect T="int" Label="Delivery Days" @bind-Value="this.BasicPackageInputModel.DeliveryDays" For="@(() => this.BasicPackageInputModel.DeliveryDays)" Variant="Variant.Outlined">
                                 @foreach(int num in this.deliveryDays)
                                 {
                                        <MudSelectItem Value="@num"> @num</MudSelectItem>
                                 }         
                            </MudSelect>
                            <MudTextField @bind-Value="this.BasicPackageInputModel.Price" For="@(() => this.BasicPackageInputModel.Price)" Label="Price" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney" AdornmentColor="Color.Warning" />
                        </EditForm>
                    </td>
                </MudItem>
                <MudItem xs="12" sm="4">
                    <td>
                        <MudItem xs="12" sm="4" Class="d-block d-sm-none">
                            <th>Standard</th>
                        </MudItem>
                        <EditForm EditContext="this.EditContextStandardPackage">
                            <DataAnnotationsValidator/>
                            <MudTextField Lines="2" T="string" Label="Title" @bind-Value="this.StandardPackageInputModel.Title" For="@(() => this.StandardPackageInputModel.Title)" Variant="Variant.Filled" />
                            <MudTextField Lines="3" T="string" Label="Details" @bind-Value="this.StandardPackageInputModel.Details" For="@(() => this.StandardPackageInputModel.Details)" Variant="Variant.Outlined"></MudTextField>
                            <MudSelect T="int" Label="Delivery Days" @bind-Value="this.StandardPackageInputModel.DeliveryDays" For="@(() => this.StandardPackageInputModel.DeliveryDays)" Variant="Variant.Outlined">
                                @foreach(int num in this.deliveryDays)
                                 {
                                        <MudSelectItem Value="@num"> @num</MudSelectItem>
                                 } 
                            </MudSelect>
                            <MudTextField @bind-Value="this.StandardPackageInputModel.Price" For="@(() => this.StandardPackageInputModel.Price)" Label="Price" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney" AdornmentColor="Color.Warning" />
                        </EditForm>
                    </td>
                </MudItem>
                <MudItem xs="12" sm="4">
                    <td>
                        <MudItem xs="12" sm="4" Class="d-block d-sm-none">
                            <th>Premium</th>
                        </MudItem>
                        <EditForm EditContext="this.EditContextPremiumPackage">
                            <DataAnnotationsValidator />
                            <MudTextField Lines="2" T="string" Label="Title" @bind-Value="this.PremiumPackageInputModel.Title" For="@(() => this.PremiumPackageInputModel.Title)" Variant="Variant.Filled" />
                            <MudTextField Lines="3" T="string" Label="Details" @bind-Value="this.PremiumPackageInputModel.Details" For="@(() => this.PremiumPackageInputModel.Details)" Variant="Variant.Outlined"></MudTextField>
                            <MudSelect T="int" Label="Delivery Days" @bind-Value="this.PremiumPackageInputModel.DeliveryDays" For="@(() => this.PremiumPackageInputModel.DeliveryDays)" Variant="Variant.Outlined">
                                @foreach(int num in this.deliveryDays)
                                 {
                                        <MudSelectItem Value="@num"> @num</MudSelectItem>
                                 }  
                            </MudSelect>
                            <MudTextField @bind-Value="this.PremiumPackageInputModel.Price" For="@(() => this.PremiumPackageInputModel.Price)" Label="Price" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney" AdornmentColor="Color.Warning" />
                        </EditForm>
                    </td>
                </MudItem>
            </MudGrid>
        </tr>
        <tr>
            <td colspan="3" class="bg-secondary">
                <MudItem Class="d-flex align-items-center">
                    <MudText Typo="Typo.subtitle2" Class="ml-3">
                        Materials
                    </MudText>
                    <MudSpacer/>
                    <MudIconButton OnClick="AddMaterial" Icon="@Icons.Material.Filled.AddCircle"></MudIconButton>
                </MudItem>
            </td>
        </tr>
        <tr>
            <td colspan="3">
                    @foreach (var material in this.materials)
                    {
                        <MudItem Class="d-flex justify-content-around">
                            <EditForm Model="@material.Value">
                                <DataAnnotationsValidator />
                                <MudTextField Label="Material" Variant="Variant.Text" T="string" @bind-Value="material.Value.Name" For="@(() => material.Value.Name)"/>
                            </EditForm>
                           
                            <MudDivider  Vertical="true" FlexItem="true"/>
                            <MudItem>
                                @if (!this.BasicPackageInputModel.Materials.Any(m => m == material.Value))
                                {
                                    <MudIconButton Icon="@Icons.Filled.Block" OnClick="() => this.AddMaterialToPackage(1, material.Key)"></MudIconButton>
                                }
                                else
                                {
                                    <MudIconButton Icon="@Icons.Filled.Check" OnClick="() => this.RemoveMaterialFromPackage(1, material.Key)"></MudIconButton>
                                }
                                <MudChip>Basic</MudChip>
                            </MudItem>
                            <MudDivider  Vertical="true" FlexItem="true"/>
                            <MudItem>
                                @if (!this.StandardPackageInputModel.Materials.Any(m => m == material.Value))
                                {
                                    <MudIconButton Icon="@Icons.Filled.Block" OnClick="() => this.AddMaterialToPackage(2, material.Key)"></MudIconButton>
                                }
                                else
                                {
                                    <MudIconButton Icon="@Icons.Filled.Check" OnClick="() => this.RemoveMaterialFromPackage(2, material.Key)"></MudIconButton>
                                }
                                <MudChip>Standard</MudChip>
                            </MudItem>
                            
                            <MudDivider  Vertical="true" FlexItem="true"/>

                            <MudItem>
                                @if (!this.PremiumPackageInputModel.Materials.Any(m => m == material.Value))
                                {
                                    <MudIconButton Icon="@Icons.Filled.Block" OnClick="() => this.AddMaterialToPackage(3, material.Key)"></MudIconButton>
                                }
                                else
                                {
                                    <MudIconButton Icon="@Icons.Filled.Check" OnClick="() => this.RemoveMaterialFromPackage(3, material.Key)"></MudIconButton>
                                }
                                <MudChip>Premium</MudChip>
                            </MudItem>
                            <MudDivider  Vertical="true" FlexItem="true"/>
                        </MudItem>
                    }
            </td>
        </tr>
        </table>
        </MudPaper>
    </MudItem>
    <MudItem sm="12" Class="d-flex justify-content-end">
        <MudButton Class="mx-1" OnClick="Validate" Variant="Variant.Filled" Color="Color.Success">Validate Form</MudButton>
        <MudButton Class="mx-1" OnClick="this.Save" Disabled="@(this.Disabled == "disabled" ? true : false)" Variant="Variant.Filled" Color="Color.Success">
            Save&Continue
        </MudButton>
    </MudItem>
</MudGrid>
