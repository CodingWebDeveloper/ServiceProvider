@page "/requirements/{ServiceId:int}"

<style>
    .input-form {
        display: flex;
        justify-content: center;
        padding: 1rem;
        margin-top: 1.25rem;
    }

    .input {
        margin: 10px;
        height: 10rem;
        width: 70vh;
        box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    }

    .container-requirement {
        padding: 1rem;
        margin-bottom: 10px;
        box-shadow: rgba(60, 64, 67, 0.15) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;
    }

    .svg {
        opacity: 0.6;
    }

        .svg:hover {
            cursor: pointer;
            opacity: 1;
            transition: opacity 350ms ease-in;
        }
</style>
<Roadmap CurrentStep="Requirements" />

<h3>Requirements</h3>
<hr />
@if (this.IsUpdating)
{
    <EditForm class="input-form" Model="@this.editModel" OnValidSubmit="() => this.Update()">
        <div class="card position-relative">
            <div class="card-header">
                <label class="mx-3">Requirement Content</label>
            </div>
            <div class="card-body">
                <p class="text-break " style="width: auto">Update Requirement</p>
                <InputTextArea class="input" @bind-Value="@this.editModel.Content" />
            </div>
            <div class="card-footer d-flex justify-content-end">
                <button class="btn btn-secondary mx-3" @onclick:stopPropagation @onclick="() => this.CancelEditing()">Cancel</button>
                <button class="btn btn-success text-white">Update</button>
            </div>
        </div>
    </EditForm>
}
else
{
    <EditForm class="input-form" Model="@this.createModel" OnValidSubmit="@this.Create">
        <div class="card position-relative">
            <div class="card-header">
                <label class="mx-3">Requirement Content</label>
            </div>
            <div class="card-body">
                <p class="text-break " style="width: auto">Give requirements to your user to ensure that they supply you with the needs of providing them with your services</p>
                <InputTextArea class="input" @bind-Value="@this.createModel.Content" />
            </div>
            <div class="card-footer d-flex justify-content-end">
                <button class="btn btn-success text-white">Add</button>
            </div>
        </div>
    </EditForm>
}

<div class="my-5">
    @{
        int counter = 0;
    }
    @foreach (var requirement in this.requirements)
    {
        <div class="card container-requirement d-flex flex-column">
            <div class="card-header justify-content-start">
                @{
                    counter++;
                }
                #@counter
            </div>
            <div class="d-flex align-items-center">
                <div class="flex-grow-1">
                    <div class="text-break">
                        @requirement.Content
                    </div>
                </div>
                <div class="d-flex align-items-center justify-content-center">
                    <svg @onclick="() => OpenModifyForm(requirement.Id)" xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" class="bg-transparent svg mx-1" viewBox="0 0 20 20" fill="currentColor">
                        <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                    </svg>
                    <svg @onclick="() =>this.Delete(requirement.Id)" xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" class="bg-transparent svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                    </svg>
                </div>
            </div>
        </div>
    }
</div>


<div class="d-flex justify-content-end">
    <button class="btn btn-success text-success" @onclick="@this.NavigateToPackages">Continue</button>
</div>


